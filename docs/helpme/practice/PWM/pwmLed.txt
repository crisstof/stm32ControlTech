
//main.c
/* Includes */
#include "stm32l4xx.h"
#include "stm32l476xx.h"

void TIM2_IRQHandler(void);


int main(void){
	
	
		//sortie PA6
	  RCC -> AHB2ENR |= 1<<0;
	  //GPIOA->MODER &= 0xFFFFDFFF;//general purpose mode
	   //GPIOA->MODER &= 0xFFFFEFFF; //alternate function mode
	  //GPIOA->MODER &= 0xFFFFFFFF;//analog mode
	  GPIOA->OTYPER &= 0xFFFFDFFF;
   
	  //TIM2
		 RCC -> APB1ENR1 |= 1<<0;//RCC_APB1ENR1_TIM3EN;// 1<<1;  //RCC_APB1ENR1_TIM3EN;
  		TIM2->PSC = 8000;//prescaler      configuration de la periode
			TIM2->ARR = 999;
	    //débordement on envoit une demande d'interuption au coeur
	     TIM2->DIER |= (1<<0);
        //config de l'irq sur le coeur
     	  NVIC->ISER[0] = NVIC->ISER[0]  | (1<<28);//irq doit être accepté
  	    NVIC->IP[28] |= (7<<4);
	 

	//TIM3
	   RCC -> APB1ENR1 |= 1<<1;
  		TIM3->PSC = 0;//prescaler      configuration de la periode
			TIM3->ARR = 3599;
	     //configuration du canal
	     //TIM3->CCMR1 |= TIM_CCMR1_OC1M_0 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_2;
			 TIM3->CCMR1 |=  TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_2;
	     TIM3->CCER |= TIM_CCER_CC1E;
	     //TIM3->CCR1 = 719;
	
	     TIM3->CR1 |= TIM_CR1_CEN;
	
       
      
	
	//lancer  le timer2
	 TIM2->CR1 = TIM1->CR1 | (1<<0);
					
					
					
		
	
    while(1) {

       /*traitement de scrutation*/
   	}
}

void TIM2_IRQHandler(void){
	static unsigned int pulse = 0;
  TIM2->SR &= ~TIM_SR_UIF;
	pulse = (pulse + 5) %101;
	TIM3->CCR1 = TIM3->ARR * pulse/100;
	//GPIOA->ODR = GPIOA->ODR ^(1<<6);
}
